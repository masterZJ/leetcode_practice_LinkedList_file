"""
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

"""
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if l1==None:
            return l2
        if l2==None:
            return l1
        
        re_list=l3=ListNode(0)
        
        while l1!=None and l2!=None:
            if l1.val<=l2.val:
                l3.next=l1
                l1=l1.next
            else :
                l3.next=l2
                l2=l2.next
            l3=l3.next
                
        if l1==None:
            l3.next=l2
        if l2==None:
            l3.next=l1
        
        return re_list.next
        
        
   或者：
   
   class Solution:
    def mergeTwoLists(self, a, b):
        if a and b:
            if a.val > b.val:
                a, b = b, a
            a.next = self.mergeTwoLists(a.next, b)
        return a or b
